{
  "name": "@structure/client",
  "description": "Frontend (desktop and web app) for the Structure bookmarking software",
  "version": "0.23.1",
  "main": ".erb/dll/main.bundle.dev.js",
  "directories": {
    "lib": "lib",
    "test": "__tests__"
  },
  "files": [
    "lib"
  ],
  "scripts": {
    "build": "concurrently \"npm run build:main\" \"npm run build:renderer\"",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true TARGET=electron webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "build:web": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true TARGET=web webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "lint": "cross-env NODE_ENV=development eslint . --ext .js,.jsx,.ts,.tsx",
    "generate-graphql-types": "graphql-codegen --config codegen.yml",
    "package": "ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --publish never",
    "package-publish": "ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --publish always",
    "postinstall": "ts-node .erb/scripts/check-native-dep.js && electron-builder install-app-deps && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts",
    "prestart": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.dev.ts",
    "start": "ts-node ./.erb/scripts/check-port-in-use.js && npm run prestart && npm run start:renderer",
    "start:main": "cross-env NODE_ENV=development electron -r ts-node/register/transpile-only ./src/main/main.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true TARGET=electron webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "start:web": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true TARGET=web PORT=3000 webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "test": "jest",
    "prepare": "cd .. && husky install client/.husky",
    "version": "ts-node ./.erb/scripts/update-version.js"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "*.json,.{eslintrc,prettierrc}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "build": {
    "productName": "Structure",
    "appId": "com.neopostmodern.Structure",
    "artifactName": "${name}-${version}-${os}-${arch}.${ext}",
    "asar": true,
    "asarUnpack": "**\\*.{node,dll}",
    "files": [
      "dist",
      "node_modules",
      "package.json"
    ],
    "protocols": [
      {
        "name": "Structure",
        "schemes": [
          "structure"
        ]
      }
    ],
    "afterSign": ".erb/scripts/notarize.js",
    "mac": {
      "target": {
        "target": "default",
        "arch": [
          "arm64",
          "x64"
        ]
      },
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "assets/entitlements.mac.plist",
      "entitlementsInherit": "assets/entitlements.mac.plist",
      "gatekeeperAssess": false,
      "category": "public.app-category.productivity",
      "icon": "assets/icons/icon-macOS.icns"
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "category": "Office",
      "desktop": {
        "StartupWMClass": "structure"
      }
    },
    "directories": {
      "app": "release/app",
      "buildResources": "assets",
      "output": "release/build"
    },
    "extraResources": [
      "./assets/**"
    ],
    "publish": {
      "provider": "github",
      "owner": "neopostmodern",
      "repo": "structure"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/neopostmodern/structure.git"
  },
  "author": {
    "name": "neopostmodern",
    "email": "structure@neopostmodern.com",
    "url": "https://github.com/neopostmodern"
  },
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/neopostmodern/structure/issues"
  },
  "keywords": [
    "bookmarking",
    "structure",
    "electron",
    "react",
    "typescript"
  ],
  "homepage": "https://structure.love",
  "jest": {
    "testURL": "http://localhost/",
    "testEnvironment": "jsdom",
    "transform": {
      "\\.(ts|tsx|js|jsx)$": "ts-jest"
    },
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/.erb/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleDirectories": [
      "node_modules",
      "release/app/node_modules"
    ],
    "testPathIgnorePatterns": [
      "release/app/dist"
    ],
    "setupFiles": [
      "./.erb/scripts/check-build-exists.ts"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/plugin-transform-runtime": "^7.25.4",
    "@babel/preset-env": "^7.25.4",
    "@babel/preset-react": "^7.24.7",
    "@babel/preset-typescript": "^7.24.7",
    "@graphql-codegen/cli": "5.0.2",
    "@graphql-codegen/fragment-matcher": "5.0.2",
    "@graphql-codegen/typescript": "4.0.9",
    "@graphql-codegen/typescript-operations": "4.2.3",
    "@graphql-codegen/typescript-react-apollo": "4.3.2",
    "@pmmmwh/react-refresh-webpack-plugin": "0.5.15",
    "@simbathesailor/use-what-changed": "^2.0.0",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.2",
    "@testing-library/jest-dom": "^6.5.0",
    "@testing-library/react": "^16.0.1",
    "@types/jest": "^29.5.13",
    "@types/lodash": "^4.17.7",
    "@types/mousetrap": "^1.6.15",
    "@types/node": "22.5.5",
    "@types/react": "^18.3.7",
    "@types/react-dom": "^18.3.0",
    "@types/react-test-renderer": "^18.3.0",
    "@types/redux-logger": "^3.0.13",
    "@types/styled-components": "^5.1.34",
    "@types/terser-webpack-plugin": "^5.2.0",
    "@types/webpack-env": "^1.18.5",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "babel-loader": "^9.2.1",
    "babel-plugin-direct-import": "^1.0.0",
    "browserslist": "^4.23.3",
    "concurrently": "^9.0.1",
    "copy-webpack-plugin": "^12.0.2",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "css-minimizer-webpack-plugin": "^7.0.0",
    "detect-port": "^1.6.1",
    "electron": "^32.1.0",
    "electron-builder": "^25.0.5",
    "electron-devtools-installer": "^3.2.0",
    "electron-notarize": "^1.2.2",
    "electron-rebuild": "^3.2.9",
    "eslint": "^8.57.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-erb": "^4.1.0",
    "eslint-import-resolver-typescript": "^3.6.3",
    "eslint-import-resolver-webpack": "^0.13.9",
    "eslint-plugin-compat": "^6.0.1",
    "eslint-plugin-import": "^2.30.0",
    "eslint-plugin-jest": "^28.8.3",
    "eslint-plugin-jsx-a11y": "^6.10.0",
    "eslint-plugin-promise": "^7.1.0",
    "eslint-plugin-react": "^7.36.1",
    "eslint-plugin-react-hooks": "^4.6.2",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.6.0",
    "husky": "^9.1.6",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.10",
    "mini-css-extract-plugin": "^2.9.1",
    "prettier": "^3.3.3",
    "react-refresh": "^0.14.2",
    "react-refresh-typescript": "^2.0.9",
    "react-test-renderer": "^18.3.1",
    "rimraf": "^6.0.1",
    "sass": "^1.78.0",
    "sass-loader": "^16.0.1",
    "source-map-loader": "^5.0.0",
    "style-loader": "^4.0.0",
    "terser-webpack-plugin": "^5.3.10",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "url-loader": "^4.1.1",
    "webpack": "^5.94.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.1.0",
    "webpack-font-preload-plugin": "^1.5.0",
    "webpack-merge": "^6.0.1",
    "workbox-webpack-plugin": "^7.1.0"
  },
  "dependencies": {
    "@apollo/client": "^3.11.8",
    "@exponent/electron-cookies": "^2.0.0",
    "@mui/icons-material": "^6.1.0",
    "@mui/lab": "^6.0.0-beta.9",
    "@mui/material": "^6.1.0",
    "@mui/styled-engine-sc": "^6.1.0",
    "@structure/common": "file:../common",
    "@structure/config": "file:../config",
    "apollo3-cache-persist": "^0.15.0",
    "electron-debug": "^4.0.1",
    "electron-log": "^5.2.0",
    "electron-updater": "^6.3.4",
    "graphql": "^16.9.0",
    "graphql-tag": "^2.12.6",
    "history": "^5.3.0",
    "localforage": "^1.10.0",
    "lodash": "^4.17.21",
    "match-sorter": "^6.3.4",
    "mousetrap": "^1.6.5",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.53.0",
    "react-intersection-observer": "^9.13.1",
    "react-markdown": "^9.0.1",
    "react-redux": "^9.1.2",
    "react-router-dom": "^6.26.2",
    "react-timeago": "^7.2.0",
    "redux": "^5.0.1",
    "redux-act": "^1.8.0",
    "redux-first-history": "^5.2.0",
    "redux-logger": "^3.0.6",
    "redux-thunk": "^3.1.0",
    "rehype-raw": "^7.0.0",
    "rehype-sanitize": "^6.0.0",
    "remark-breaks": "^4.0.0",
    "remark-gfm": "^4.0.0",
    "styled-components": "^6.1.13"
  },
  "devEngines": {
    "node": ">=14.x",
    "npm": ">=7.x"
  },
  "prettier": {
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".eslintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ],
    "singleQuote": true
  },
  "publishConfig": {
    "access": "public"
  }
}
